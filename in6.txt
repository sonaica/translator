int N = 100000;

struct segtree {
    int t[2 * N];
    int n;

    fun build(int n_) void {
        n = n_;
        for (int i = n; i < 2 * n; ++i) {
            input t[i];
        }
        for (int i = n - 1; i > 0; --i) {
            t[i] = t[i << 1] + t[i << 1 | 1];
        }
    }

    fun update(int i, int v) void {
        i += n;
        t[i] = v;
        while (i > 1) {
            t[i >> 1] = t[i] + t[i ^ 1];
            i >>= 1;
        }
    }

    fun get(int l, int r) int {
        l += n;
        r += n;
        int res = 0;
        for (; l < r; l >>= 1, r >>= 1) {
            if (l & 1) {
                res += t[l + 1];
                ++l;
            }
            if (r & 1) 
                res += t[--r];
        }
        return res;
    }
} st;

main() {
    int len;
    input len;
    st.build(len);
    int q;
    input q;
    for (int i = 0; i < q; ++i) {
        int t;
        input t;
        if (t == 1) {
            int l, r;
            input l, r;
            --l;
            output st.get(l, r), "\n";
        } else {
            int j, x;
            input j, x;
            --j;
            st.update(j, x);
        }
    }
}